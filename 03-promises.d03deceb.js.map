{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAMjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUJ,UAEpBO,EAAO,CAAEH,WAAUJ,S,GAEpBA,E,IAbPJ,EAAKC,KAAKc,iBAAiB,UAkB3B,SAAsBC,GACpBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAaC,OAAOnB,EAAKI,MAAMgB,OAC/BC,EAAYF,OAAOnB,EAAKK,KAAKe,OAC7BE,EAAcH,OAAOnB,EAAKM,OAAOc,OAE5BG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EACpChB,EAAcgB,EAAI,EAAGA,EAAIF,EAAYH,GAClCM,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBsB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAEvE0B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MAClBsB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAGzEY,EAAIgB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let delayValue = Number(refs.delay.value);\n  let stepValue = Number(refs.step.value);;\n  let amountValue = Number(refs.amount.value);\n  \n  for (let i = 0; i < amountValue; i += 1) {\n    createPromise(i + 1, i * stepValue + delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  evt.target.reset();\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","target","reset"],"version":3,"file":"03-promises.d03deceb.js.map"}