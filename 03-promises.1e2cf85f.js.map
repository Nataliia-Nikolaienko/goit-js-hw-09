{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAMjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEF,E,MAAUJ,IAEpBO,EAAO,C,SAAEH,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAbbJ,EAAKC,KAAKc,iBAAiB,UAkB3B,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAaC,OAAOnB,EAAKI,MAAMgB,OAC/BC,EAAYF,OAAOnB,EAAKK,KAAKe,OAC7BE,EAAcH,OAAOnB,EAAKM,OAAOc,OAErC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EACpChB,EAAcgB,EAAI,EAAGA,EAAIF,EAAYH,GAClCM,MAAK,EAAChB,SAAEA,EAAQJ,MAAEA,MACjBqB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBnB,QAAiBJ,MAAU,IAEzEwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MAClBqB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBrB,QAAeJ,MAAU,IAG3EY,EAAIc,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let delayValue = Number(refs.delay.value);\n  let stepValue = Number(refs.step.value);;\n  let amountValue = Number(refs.amount.value);\n  \n  for (let i = 0; i < amountValue; i += 1) {\n    createPromise(i + 1, i * stepValue + delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  evt.target.reset();\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.1e2cf85f.js.map"}